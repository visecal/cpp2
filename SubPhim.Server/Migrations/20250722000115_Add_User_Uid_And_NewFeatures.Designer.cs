// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubPhim.Server.Data;

#nullable disable

namespace SubPhim.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250722000115_Add_User_Uid_And_NewFeatures")]
    partial class Add_User_Uid_And_NewFeatures
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("SubPhim.Server.Data.BannedDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssociatedUsername")
                        .HasColumnType("TEXT");

                    b.Property<string>("BanReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BannedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hwid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastKnownIp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BannedDevices");
                });

            modelBuilder.Entity("SubPhim.Server.Data.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hwid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastLoginIp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SubPhim.Server.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedApiAccess")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DailyRequestCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DailyRequestLimitOverride")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DailyVideoLimit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("GrantedFeatures")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastRequestResetUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastVideoResetUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxDevices")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SubscriptionExpiry")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("VideoDurationLimitMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideosProcessedToday")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SubPhim.Server.Data.Device", b =>
                {
                    b.HasOne("SubPhim.Server.Data.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SubPhim.Server.Data.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
